port: 3333
# 单个节点
proxies:
# 机场配置模块
provider_config: &provider_config #锚点
  type: http
  interval: 86400
  user-agent: "clash"
  health-check:
    enable: true
    url: http://www.apple.com/library/test/success.html
    interval: 300

proxy-providers:
  # 第一个机场
  AP1:
    url: https://meisai2.xn--chqu2nzsxv3y.com/api/v1/client/subscribe?token=dba4fa150f91e61d7a4bf71ab5a99e65  #修改你的机场1订阅地址
    <<: *provider_config
    override:
      additional-prefix: "[AP1]"
  # 第二个机场
  #AP2:
    #url: https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX #修改你的机场2订阅地址
    #<<: *provider_config
    #override:
      #additional-prefix: "[AP2]"
  # 第三个机场
  #AP3:
    #url: https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX #修改你的机场3订阅地址
    #<<: *provider_config
    #override:
     # additional-prefix: "[AP3]"



##锚点start     
# 规则类型相关
ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
ip_list: &iplist {type: http, interval: 86400, behavior: ipcidr, format: text}
domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
class: &class {type: http, interval: 86400, behavior: classical, format: text}

# 节点筛选相关
HK: &HK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
TW: &TW '^(?=.*((?i)🇨🇳|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
JP: &JP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
SG: &SG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
US: &US '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
All: &All '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|Traffic|Expire|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 分组配置模块
standard_proxies: &standard_proxies
  type: select
  proxies:
    - Proxy
    - HongKong
    - TaiWan
    - Japan
    - Singapore
    - America
    - DIRECT
  include-all: true

UrlTest: &UrlTest
  type: url-test
  interval: 300                                           # 健康检查间隔
  tolerance: 600                                          # 延迟容忍度，单位ms
  lazy: true                                              # 未选中当前组时不进行测试
  url: 'http://www.gstatic.com/generate_204'
  disable-udp: false
  timeout: 2000                                           # 健康检查超时，单位ms
  max-failed-times: 3                                     # 失败次数，超过则执行一次强制健康检查
  hidden: true                                            # 隐藏显示
  include-all-providers: true                             # 所有节点

FallBack: &FallBack
  type: fallback
  interval: 300
  lazy: true
  url: 'http://www.gstatic.com/generate_204'
  disable-udp: false
  timeout: 2000
  max-failed-times: 3
  hidden: true
  include-all-providers: true

######### 锚点 end #########


#域名组
proxy-groups:
#漏网之鱼/代理
  - {name: Proxy, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rocket.png,<<: *standard_proxies, proxies: [HongKong,TaiWan,Japan,Singapore,America,DIRECT]}
  - {name: Final, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png,<<: *standard_proxies, proxies: [Proxy,DIRECT]}

#综合分流
  - {name: Block, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AdBlack.png,<<: *standard_proxies, proxies: [REJECT, DIRECT]}
  - {name: banProgram, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AdBlack.png, <<: *standard_proxies, proxies: [REJECT, DIRECT]}
  - {name: 🗽 国外, <<: *standard_proxies}
  - {name: 🎯 国内,<<: *standard_proxies, proxies: [Final, DIRECT]}
  - {name: 🔞 Porn,<<: *standard_proxies}
      

  
#网页app分流组
  - {name: Telegram, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png,<<: *standard_proxies}
  - {name: X, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/X.png,<<: *standard_proxies}
  - {name: Instagram, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png,<<: *standard_proxies}
  - {name: Facebook, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png,<<: *standard_proxies}
  - {name: Spotify, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png,<<: *standard_proxies}
  - {name: Speedtest, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png,<<: *standard_proxies}
  - {name: GitHub, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png,<<: *standard_proxies}
  - {name: YouTube, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png,<<: *standard_proxies}
  - {name: Bahamut, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bahamut.png,<<: *standard_proxies, proxies: [HongKong, TaiWan]}

#服务分流组
  - {name: Apple, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png,<<: *standard_proxies}
  - {name: Google, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png,<<: *standard_proxies}
  - {name: Microsoft, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Windows_11.png,<<: *standard_proxies}
  - {name: 🤖 AI, <<: *standard_proxies}

#游戏类分流  
  - {name: Steam, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Steam.png,<<: *standard_proxies}
  - {name: Games, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png,<<: *standard_proxies}
  - {name: PlayStation, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PlayStation.png,<<: *standard_proxies}
  - {name: Xbox, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Xbox.png,<<: *standard_proxies}
  - {name: Nintendo,icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Nintendo.png,<<: *standard_proxies}

#节点组    
  # 地区节点代理组
  - {name: HongKong, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png, type: select, proxies: [HK-Auto, HK-FallBack], include-all-providers: true, filter: *HK}
  - {name: TaiWan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png, type: select, proxies: [TW-Auto, TW-FallBack], include-all-providers: true, filter: *TW}
  - {name: Japan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png, type: select, proxies: [JP-Auto, JP-FallBack], include-all-providers: true, filter: *JP}
  - {name: Singapore, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png, type: select, proxies: [SG-Auto, SG-FallBack], include-all-providers: true, filter: *SG}
  - {name: America, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png, type: select, proxies: [US-Auto, US-FallBack], include-all-providers: true, filter: *US}
  #全部节点

# 延时优选代理组
  - {name: HK-Auto, <<: *UrlTest, filter: *HK, exclude-filter: '(免费|下载|直连)'}
  - {name: TW-Auto, <<: *UrlTest, filter: *TW, exclude-filter: '(免费|下载|直连)'}
  - {name: JP-Auto, <<: *UrlTest, filter: *JP, exclude-filter: '(免费|下载|直连)'}
  - {name: SG-Auto, <<: *UrlTest, filter: *SG, exclude-filter: '(免费|下载|直连)'}
  - {name: US-Auto, <<: *UrlTest, filter: *US, exclude-filter: '(免费|下载|直连)'}

# 故障转移代理组
  - {name: HK-FallBack, <<: *FallBack, filter: *HK, exclude-filter: '(免费|下载|直连)'}
  - {name: TW-FallBack, <<: *FallBack, filter: *TW, exclude-filter: '(免费|下载|直连)'}
  - {name: JP-FallBack, <<: *FallBack, filter: *JP, exclude-filter: '(免费|下载|直连)'}
  - {name: SG-FallBack, <<: *FallBack, filter: *SG, exclude-filter: '(免费|下载|直连)'}
  - {name: US-FallBack, <<: *FallBack, filter: *US, exclude-filter: '(免费|下载|直连)'}
  

rule-providers:
  #国内/直连
  cn_domain: {<<: *domain, path: ./ruleset/cn_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  direct_class: {<<: *class, path: ./ruleset/direct_class.list, url: "https://raw.githubusercontent.com/Apseele/Myopenclashrules/refs/heads/main/direct.list"}
  # /广告/自定义
  anti-ad_domain: {<<: *domain, path: ./ruleset/anti-ad_domain.mrs, url: "https://raw.githubusercontent.com/privacy-protection-tools/anti-ad.github.io/master/docs/mihomo.mrs"}
  ad_ip: { <<: *iplist, path: ./ruleset/AD_ip.list, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/ad.list"}
  banProgramAD_domain: {<<: *class, path: ./ruleset/banProgramAD_domain.list, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"}
  speedtest_domain: { <<: *domain, path: ./ruleset/speedtest_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  etralist_class: {<<: *class, path: ./ruleset/etralist_class.list, url: "https://raw.githubusercontent.com/Apseele/Myopenclashrules/refs/heads/main/etra.list"}
  
  #AI分流
  AI_class: {<<: *class, path: ./ruleset/AI_class.list, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/AI.list"}
  Gemini_class: {<<: *class, path: ./ruleset/Gemini_class.list, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Gemini/Gemini.list"}

  #社交媒体
  telegram_domain: {<<: *domain, path: ./ruleset/telegram_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  whatsapp_domain: {<<: *domain, path: ./ruleset/whatsapp_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/whatsapp.mrs"}
  facebook_domain: {<<: *domain, path: ./ruleset/facebook_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"}
  twitter_domain: {<<: *domain, path: ./ruleset/twitter_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/x.mrs"}
  reddit_domain: {<<: *domain, path: ./ruleset/reddit_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/reddit.mrs"}
  Instagram_class: {<<: *class, path: ./ruleset/Instagram_class.list, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Instagram/Instagram.list"}

  #其他
  github_domain: {<<: *domain, path: ./ruleset/github_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  bahamut_domain: {<<: *domain, path: ./ruleset/bahamut_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.mrs"}
  
  #服务分流
  google_domain: {<<: *domain, path: ./ruleset/google_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  microsoft_domain: {<<: *domain, path: ./ruleset/microsoft_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}

  #流媒体分流
  spotify_domain: {<<: *domain, path: ./ruleset/spotify_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  youtube_domain: {<<: *domain, path: ./ruleset/youtube_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  bilibili_domain: {<<: *domain, path: ./ruleset/bilibili_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"}
  bilibili_ip: {<<: *ip, path: ./ruleset/bilibili_ip.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/bilibili.mrs"}

  #游戏分流
  Steam_class: {<<: *class, path: ./ruleset/Steam_class.list, url: "https://raw.githubusercontent.com/Apseele/Myopenclashrules/refs/heads/main/Steamproxy.list"}
  epic_domain: {<<: *domain, path: ./ruleset/epic_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/epicgames.mrs"}
  ea_domain: {<<: *domain, path: ./ruleset/ea_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ea.mrs"}
  blizzard_domain: {<<: *domain, path: ./ruleset/blizzard_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/blizzard.mrs"}
  ubi_domain: {<<: *domain, path: ./ruleset/ubi_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ubisoft.mrs"}
 
  #国外
  gfw_domain: {<<: *domain, path: ./ruleset/gfw_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  global_domain: {<<: *class, path: ./ruleset/global_domain.list, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global.list"}
  proxy_domain: {<<: *domain, path: ./ruleset/proxy_domain.mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/proxy.mrs"}



rules:
  # ✅ 直连高优先
  - RULE-SET,direct_class,DIRECT
  - GEOSITE,category-games@cn,DIRECT
  # ✅ 自定义代理文件
  - RULE-SET,etralist_class,Proxy
  # ✅ 私有网络/国内/广告/拦截
  - GEOSITE,private,DIRECT
  - GEOIP,private,DIRECT,no-resolve
  - RULE-SET,anti-ad_domain,Block
  - RULE-SET,ad_ip,Block
  - RULE-SET,banProgramAD_domain,Block
  # ✅ AI分流
  - RULE-SET,AI_class,🤖 AI
  - RULE-SET,Gemini_class,🤖 AI
  # ✅ 社交媒体
  - GEOIP,telegram,Telegram
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,twitter_domain,X
  - RULE-SET,facebook_domain,Facebook
  - RULE-SET,reddit_domain,Final
  - RULE-SET,Instagram_class,Instagram
  - RULE-SET,whatsapp_domain,Final
  # ✅ 其他分流
  - RULE-SET,github_domain,GitHub
  - RULE-SET,bahamut_domain,Bahamut
  # ✅ 服务分流
  - RULE-SET,google_domain,Google
  - GEOIP,google,Google
  - GEOSITE,apple,Apple
  - RULE-SET,microsoft_domain,Microsoft
  # ✅ 流媒体分流
  - RULE-SET,spotify_domain,Spotify
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,bilibili_domain,DIRECT
  - RULE-SET,bilibili_ip,DIRECT
  # ✅ 游戏分流
  - RULE-SET,Steam_class,Steam
  - RULE-SET,epic_domain,Games
  - RULE-SET,ea_domain,Games
  - RULE-SET,blizzard_domain,Games
  - RULE-SET,ubi_domain,Games
  - GEOSITE,xbox,Xbox
  - GEOSITE,playstation,PlayStation
  - GEOSITE,nintendo,Nintendo

  # 🔞 Porn
  - GEOSITE,category-porn,🔞 Porn

  # ✅ 测速/测试
  - RULE-SET,speedtest_domain,Speedtest

  # ✅ 国内
  - RULE-SET,cn_domain,🎯 国内 
  - GEOIP,CN,🎯 国内
  - GEOSITE,CN,🎯 国内

  # ✅ 代理类规则
  - RULE-SET,gfw_domain,🗽 国外
  - RULE-SET,proxy_domain,🗽 国外
  - RULE-SET,global_domain,🗽 国外

  # ✅ 漏网之鱼
  - MATCH,Final
